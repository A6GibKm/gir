use std::io::{Result, Write};

pub fn generate<W: Write>(w: &mut W) -> Result<()>{
    let v = vec![
"",
"#![allow(non_camel_case_types)]",
"#![allow(dead_code)]",
"",
"extern crate libc;",
"extern crate glib_sys as glib_ffi;",
"extern crate gdk_sys as gdk_ffi;",
"extern crate pango_sys as pango_ffi;",
"",
"pub mod enums;",
"",
"use libc::{c_int, c_char, c_float, c_uint, c_double, c_long, c_void, time_t};",
"",
"pub use glib_ffi::{",
"    gboolean, GFALSE, GTRUE, gsize, gpointer, GType, GObject, GPermission,",
"    GList, GSList, GError, GValue};",
"",
"//pub type GtkAllocation = GdkRectangle;",
"",
"#[repr(C)]",
"pub struct GtkStyleContext;",
"#[repr(C)]",
"pub struct GtkStyleProvider;",
"#[repr(C)]",
"pub struct GtkCssProvider;",
"#[repr(C)]",
"pub struct GtkWidget;",
"#[repr(C)]",
"pub struct GtkWindow;",
"#[repr(C)]",
"pub struct GtkLabel;",
"#[repr(C)]",
"pub struct GtkMisc;",
"#[repr(C)]",
"pub struct GtkButton;",
"#[repr(C)]",
"pub struct GtkBox;",
"#[repr(C)]",
"pub struct GtkOrientable;",
"#[repr(C)]",
"pub struct GtkRange;",
"#[repr(C)]",
"pub struct GtkScrollbar;",
"#[repr(C)]",
"pub struct GtkButtonBox;",
"#[repr(C)]",
"pub struct GtkFrame;",
"#[repr(C)]",
"pub struct GtkAspectFrame;",
"#[repr(C)]",
"pub struct GtkFixed;",
"#[repr(C)]",
"pub struct GtkBin;",
"#[repr(C)]",
"pub struct GtkContainer;",
"#[repr(C)]",
"pub struct GtkFontButton;",
"#[repr(C)]",
"pub struct GtkToggleButton;",
"#[repr(C)]",
"pub struct GtkCheckButton;",
"#[repr(C)]",
"pub struct GtkMenuButton;",
"#[repr(C)]",
"pub struct GtkColorButton;",
"#[repr(C)]",
"pub struct GtkLinkButton;",
"#[repr(C)]",
"pub struct GtkAdjustment;",
"#[repr(C)]",
"pub struct GtkScaleButton;",
"#[repr(C)]",
"pub struct GtkVolumeButton;",
"#[repr(C)]",
"pub struct GtkGrid;",
"#[repr(C)]",
"pub struct GtkEntryBuffer;",
"#[repr(C)]",
"pub struct GtkEntry;",
"#[repr(C)]",
"pub struct GtkSearchEntry;",
"#[repr(C)]",
"pub struct GtkSwitch;",
"#[repr(C)]",
"pub struct GtkScale;",
"#[repr(C)]",
"pub struct GtkLevelBar;",
"#[repr(C)]",
"pub struct GtkSearchBar;",
"#[repr(C)]",
"pub struct GtkSpinButton;",
"#[repr(C)]",
"pub struct GtkSpinner;",
"#[repr(C)]",
"pub struct GtkImage;",
"#[repr(C)]",
"pub struct GtkProgressBar;",
"#[repr(C)]",
"pub struct GtkArrow;",
"#[repr(C)]",
"pub struct GtkCalendar;",
"#[repr(C)]",
"pub struct GtkDrawingArea;",
"#[repr(C)]",
"pub struct GtkAlignment;",
"#[repr(C)]",
"pub struct GtkExpander;",
"#[repr(C)]",
"pub struct GtkSeparator;",
"#[repr(C)]",
"pub struct GtkPaned;",
"#[repr(C)]",
"pub struct GtkInfoBar;",
"#[repr(C)]",
"pub struct GtkToolShell;",
"#[repr(C)]",
"pub struct GtkToolbar;",
"#[repr(C)]",
"pub struct GtkDialog;",
"#[repr(C)]",
"pub struct GtkAboutDialog;",
"#[repr(C)]",
"pub struct GtkMessageDialog;",
"#[repr(C)]",
"pub struct GtkAppChooserDialog;",
"#[repr(C)]",
"pub struct GtkColorChooserDialog;",
"#[repr(C)]",
"pub struct GtkFileChooserDialog;",
"#[repr(C)]",
"pub struct GtkFileChooser;",
"#[repr(C)]",
"pub struct GtkNotebook;",
"#[repr(C)]",
"pub struct GtkStack;",
"#[repr(C)]",
"pub struct GtkStackSwitcher;",
"#[repr(C)]",
"pub struct GtkRevealer;",
"#[repr(C)]",
"pub struct GtkOverlay;",
"#[repr(C)]",
"pub struct GtkScrollable;",
"#[repr(C)]",
"pub struct GtkLayout;",
"#[repr(C)]",
"pub struct GtkHeaderBar;",
"#[repr(C)]",
"pub struct GtkFlowBox;",
"#[repr(C)]",
"pub struct GtkFlowBoxChild;",
"#[repr(C)]",
"pub struct GtkListBox;",
"#[repr(C)]",
"pub struct GtkListBoxRow;",
"#[repr(C)]",
"pub struct GtkActionBar;",
"#[repr(C)]",
"pub struct GtkFileFilter;",
"#[repr(C)]",
"pub struct GtkAppChooser;",
"#[repr(C)]",
"pub struct GAppLaunchContext;",
"#[repr(C)]",
"pub struct GAppInfo;",
"#[repr(C)]",
"pub struct GtkFontChooser;",
"#[repr(C)]",
"pub struct GtkFontChooserDialog;",
"#[repr(C)]",
"pub struct GtkBuildable;",
"//pub struct GtkPageSetupUnixDialog;",
"#[repr(C)]",
"pub struct GtkPrintSettings;",
"#[repr(C)]",
"pub struct GtkPageSetup;",
"#[repr(C)]",
"pub struct GtkPaperSize;",
"#[repr(C)]",
"pub struct GtkRecentData {",
"    pub display_name: *mut c_char,",
"    pub description: *mut c_char,",
"    pub mime_type: *mut c_char,",
"    pub app_name: *mut c_char,",
"    pub app_exec: *mut c_char,",
"    pub groups: *mut *mut c_char,",
"    pub is_private: gboolean",
"}",
"#[repr(C)]",
"pub struct GtkRecentInfo;",
"#[repr(C)]",
"pub struct GtkRecentFilter;",
"#[repr(C)]",
"pub struct GtkRecentFilterInfo {",
"    pub contains: enums::RecentFilterFlags,",
"    pub uri: *const c_char,",
"    pub display_name: *const c_char,",
"    pub mime_type: *const c_char,",
"    pub applications: *const *const c_char,",
"    pub groups: *const *const c_char,",
"    pub age: c_int",
"}",
"#[repr(C)]",
"pub struct GtkRecentManager;",
"#[repr(C)]",
"pub struct GtkRecentChooser;",
"#[repr(C)]",
"pub struct GtkRecentChooserDialog;",
"#[repr(C)]",
"pub struct GtkCellRendererClass;",
"#[repr(C)]",
"pub struct GtkCellRenderer;",
"#[repr(C)]",
"pub struct GtkCellLayout;",
"#[repr(C)]",
"pub struct GtkTreeModel;",
"#[repr(C)]",
"pub struct GtkListStore;",
"#[repr(C)]",
"pub struct GtkTreeStore;",
"#[repr(C)]",
"pub struct GtkTreePath;",
"#[repr(C)]",
"pub struct GtkTreeIter {",
"    pub stamp: c_int,",
"    pub user_data: *mut c_void,",
"    pub user_data2: *mut c_void,",
"    pub user_data3: *mut c_void",
"}",
"#[repr(C)]",
"pub struct GtkCellEditable;",
"#[repr(C)]",
"pub struct GtkCellRendererText;",
"#[repr(C)]",
"pub struct GtkCellRendererToggle;",
"#[repr(C)]",
"pub struct GtkToolItem;",
"#[repr(C)]",
"pub struct GtkToolItemGroup;",
"#[repr(C)]",
"pub struct GtkToolPalette;",
"#[repr(C)]",
"pub struct GtkToolButton;",
"#[repr(C)]",
"pub struct GtkMenuToolButton;",
"#[repr(C)]",
"pub struct GtkToggleToolButton;",
"#[repr(C)]",
"pub struct GtkRadioToolButton;",
"#[repr(C)]",
"pub struct GtkSeparatorToolItem;",
"#[repr(C)]",
"pub struct GtkMenu;",
"#[repr(C)]",
"pub struct GMenuModel;",
"#[repr(C)]",
"pub struct GClosure;",
"#[repr(C)]",
"pub struct GtkColorChooser;",
"#[repr(C)]",
"pub struct GtkEditable;",
"#[repr(C)]",
"pub struct GtkRadioButton;",
"// not useful to implement for the moment",
"#[repr(C)]",
"pub struct GtkBuilder;",
"#[repr(C)]",
"pub struct GtkTextTag;",
"#[repr(C)]",
"pub struct GtkTextAttributes;",
"#[repr(C)]",
"pub struct GtkTextView;",
"#[repr(C)]",
"pub struct GtkTextBuffer;",
"#[repr(C)]",
"pub struct GtkTextTagTable;",
"#[repr(C)]",
"pub struct GtkScrolledWindow;",
"#[repr(C)]",
"pub struct GtkPlacesSidebar;",
"#[repr(C)]",
"pub struct GtkIconSize;",
"#[repr(C)]",
"pub struct GtkTextMark;",
"#[repr(C)]",
"pub struct GtkTextIter;",
"#[repr(C)]",
"pub struct GtkTextChildAnchor;",
"#[repr(C)]",
"pub struct GtkTreeView;",
"#[repr(C)]",
"pub struct GtkTreeViewColumn;",
"#[repr(C)]",
"pub struct GtkMenuShell;",
"#[repr(C)]",
"pub struct GtkMenuItem;",
"#[repr(C)]",
"pub struct GtkCheckMenuItem;",
"#[repr(C)]",
"pub struct GtkViewport;",
"#[repr(C)]",
"pub struct GtkStatusbar;",
"#[repr(C)]",
"pub struct GtkLockButton;",
"#[repr(C)]",
"pub struct GtkActionable;",
"#[repr(C)]",
"pub struct GtkEntryCompletion;",
"#[repr(C)]",
"pub struct GtkIconView;",
"#[repr(C)]",
"pub struct GtkTreeSelection;",
"#[repr(C)]",
"pub struct GtkRecentChooserWidget;",
"#[repr(C)]",
"pub struct GtkComboBox;",
"#[repr(C)]",
"pub struct GtkComboBoxText;",
"#[repr(C)]",
"pub struct GtkPopover;",
"#[repr(C)]",
"pub struct GtkAppChooserWidget;",
"#[repr(C)]",
"pub struct GtkSizeGroup;",
"#[repr(C)]",
"pub struct GtkFileChooserWidget;",
"#[repr(C)]",
"pub struct GtkColorChooserWidget;",
"#[repr(C)]",
"pub struct GtkFontChooserWidget;",
"#[repr(C)]",
"pub struct GtkMovementStep;",
"#[repr(C)]",
"pub struct GtkSocket;",
"#[repr(C)]",
"pub struct GtkEventBox;",
"#[repr(C)]",
"pub struct GtkTooltip;",
"#[repr(C)]",
"pub struct GtkStatusIcon;",
"",
"pub const GTK_ENTRY_BUFFER_MAX_SIZE: u16 = ::std::u16::MAX;",
"",
"//pub type GtkTreeModelForeachFunc = fn(model: *mut GtkTreeModel, path: *mut GtkTreePath, iter: *mut GtkTreeIter, data: gpointer) -> gboolean;",
"",
"pub const GTK_STYLE_PROVIDER_PRIORITY_FALLBACK: u32 = 1;",
"pub const GTK_STYLE_PROVIDER_PRIORITY_THEME: u32 = 200;",
"pub const GTK_STYLE_PROVIDER_PRIORITY_SETTINGS: u32 = 400;",
"pub const GTK_STYLE_PROVIDER_PRIORITY_APPLICATION: u32 = 600;",
"pub const GTK_STYLE_PROVIDER_PRIORITY_USER: u32 = 800;",
    ];

    for s in v {
        try!(writeln!(w, "{}", s));
    }

    Ok(())
}
